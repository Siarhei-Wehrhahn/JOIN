.addTaskForm {
  display: flex;
}

.addTaskColumn {
  display: flex;
  flex-direction: column;
  gap: 8px;
  width: 440px;
  position: relative;
  z-index: 1;
}

.addTaskForm span {
  color: #ff8190;
}

.addTaskForm p {
  font-size: 20px;
  font-weight: 400;
}

.addTaskForm input, textarea, .dropdownButton {
  font-size: 20px;
  border-radius: 10px;
  padding: 12px 21px;
  border: 1px solid #d1d1d1;
  width: 100%;
}

.addTaskForm input, textarea {
  margin-bottom: 32px;
}

.addTaskForm input::placeholder, textarea::placeholder {
  color: #d1d1d1;
}

.addTaskForm input:focus, textarea:focus {
  outline: 1px solid #29abe2;
}

#descriptionInput {
  height: 130px;
  font-family: "Inter", sans-serif;
}

.dropdownButton {
  display: flex;
  justify-content: space-between;
  align-items: center;
  background-color: white;
}

.spacer {
  background-color: #d1d1d1;
  width: 1px;
  margin: 0px 64px;
}

.prioContainer {
  display: flex;
  justify-content: space-between;
  gap: 8px;
  margin-bottom: 32px;
}

.prio {
  display: flex;
  gap: 8px;
  justify-content: center;
  align-items: center;
  flex: 1;
  background-color: white;
  padding: 18px 10px;
  border-radius: 10px;
  box-shadow: 0px 0px 4px 0px #0000001a;
  transition: all 100ms ease-in-out;
}

.prio:hover {
  cursor: pointer;
  box-shadow: 0px 4px 6px 0px #00000071;
}

.activePrio, .activePrio path, .activePrio p {
  color: white;
  fill: white;
  font-weight: 700;
}

#mediumPrio {
  background-color: #ffa800;
}

#subtaskInput {
  margin-bottom: 0;
  padding-right: 80px;
}

.subtaskInputContainer {
  display: flex;
  align-items: center;
  justify-content: end;
  position: relative;
}

.subtaskInputContainer input {
  flex: 1;
}

.buttonContainer {
  display: flex;
  justify-content: end;
  gap: 16px;
}

.hollowButton {
  display: flex;
  padding: 16px;
  color: #2a3647;
  border: 1px solid currentColor;
  border-radius: 10px;
  align-items: center;
  gap: 8px;
  font-size: 20px;
  transition: all 100ms ease-in-out;
}

.hollowButton:hover, .hollowButton:hover path {
  cursor: pointer;
  color: #29abe2;
  stroke: currentColor;
  box-shadow: 0px 4px 4px 0px #00000040;
}

.fullButton {
  display: flex;
  padding: 16px;
  color: white;
  background: #2a3647;
  border-radius: 10px;
  align-items: center;
  gap: 8px;
  font-weight: 700;
  font-size: 21px;
  transition: all 100ms ease-in-out;
}

.fullButton:hover {
  cursor: pointer;
  background-color: #29abe2;
  box-shadow: 0px 4px 4px 0px #00000040;
}

#requiredInfo {
  position: absolute;
  bottom: 0;
}

#requiredInfoResp {
  display: none;
}

/* dropdown */
.dropdown {
  display: none;
  background-color: white;
  margin-top: -10px;
  border-radius: 0 0 10px 10px;
  overflow: auto;
  z-index: 2;
  flex-direction: column;
  position: absolute;
  left: 0;
  width: 100%;
  box-shadow: 0px 0px 4px 0px #0000001a;
  padding-top: 7px;
}

.dropdown::-webkit-scrollbar-button:vertical:start:decrement {
  background-image: none;
}

#assignedToDropdownButton {
  position: relative;
  z-index: 3;
}

#assignedToDropdownButton:hover {
  cursor: pointer;
  box-shadow: 0px 0px 4px 0px #0000001a;
}

.dropdownArrow {
  height: 24px;
  width: 24px;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
}

.dropdownArrow:hover {
  background: #eeeeee;
  cursor: pointer;
}

#assignedToDropdown {
  top: 68%;
  max-height: 25svh;
}

.dropdownContent {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 7px 16px;
  border-radius: 10px;
}

.dropdownContent:hover {
  cursor: pointer;
  background-color: #eeeeee;
}

.activeDropdownContact {
  color: white;
  background: #2a3647;
}

.activeDropdownContact:hover {
  background: #091931;
  cursor: pointer;
}

.dropdownContactIconAndName {
  display: flex;
  align-items: center;
  gap: 7px;
}

.contactIcon {
  color: white;
  width: 42px;
  height: 42px;
  border: 2px solid white;
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow: 0px 0px 4px 0px #0000001a;
}

.contactIcon p {
  font-size: 12px;
}

#assignedContactsIconRow {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
}

.arrowFlip {
  transform: rotate(180deg) !important;
}

#categoryDropdownButton {
  margin-bottom: 8px;
  z-index: 3;
}

#categoryDropdown {
  top: 58%;
}

.subtaskInputIconContainer {
  display: flex;
  align-items: center;
  justify-content: center;
  position: absolute;
  transform: translateX(-16px);
  gap: 4px;
}

.subtaskInputIcon {
  display: flex;
  align-items: center;
  justify-content: center;
  height: 24px;
  width: 24px;
  border-radius: 50%;
}

.subtaskInputIcon:hover {
  background: #eeeeee;
  cursor: pointer;
}

#subtaskInputIconSpacer {
  width: 1px;
  height: 24px;
  background: #d1d1d1;
}

.dnone {
  display: none;
}

#subtaskListContainer {
  height: 150px;
  overflow-y: auto;
}

.subtaskListElement {
  display: flex;
  justify-content: space-between;
  border-radius: 10px;
  padding: 4px 16px;
  min-height: 32px;
  max-width: 404px;
}

.subtaskListElement li {
  flex: 1;
  height: fit-content;
  overflow-x: hidden;
}

.subtaskListElement:hover {
  background: #eeeeee;
  cursor: pointer;
}

.subtaskListElement:hover div {
  display: flex !important;
}

.subtaskListSpacer {
  width: 1px;
  height: 24px;
  background: #d1d1d1;
}

.subtaskListIcons {
  display: none;
  gap: 6px;
  align-items: center;
  justify-content: center;
}

.dflex {
  display: flex !important;
}

li[contenteditable="true"]:focus {
  outline: none;
}

.subtaskEditMode {
  background: white !important;
  border-radius: 0px;
  border-bottom: 1px solid #29abe2;
  cursor: auto !important;
}

.subtaskEditMode .subtaskListIcons {
  display: flex !important;
  flex-direction: row-reverse;
}

.taskSuccess {
  box-shadow: 0px 0px 4px 0px #0000001A;
  background: #2A3647;
  color: #FFFFFF;
  display: flex;
  justify-content: space-between;
  font-size: 20px;
  font-weight: 400;
  padding: 26px;
  align-items: center;
  border-radius: 20px;
  z-index: 1000;
  gap: 32px;
  font-family: 'Inter', sans-serif;
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  animation: slideInBottom 250ms forwards ease-out;
}

@keyframes slideInBottom {
  0% {
    top: 100vh;
  }
}

/* validation error-message adaptation */
.errorText {
  top: 60%;
}

.validationContainer {
  width: 100%;
}